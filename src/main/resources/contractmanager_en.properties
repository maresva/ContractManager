# Titles of windows
windowTitle=Contract Manager
windowTitleDetails=Details

# Info logs about adding, removing and exporting files etc.
infoReportsAdded=Reports has been added from comparison ({0} reports)
infoReportsExported=Reports has been exported ({0} reports)
infoFilesAdded=Files has been added ({0} files)
infoFilesRemoved=Files has been removed ({0} files)
infoFilesExported=Files has been exported ({0} files)
infoFiltersUpdated=Filter settings has been saved

# Title of the files chooser filter
fileChooserFilter=Java source files

# Button Strings
buttonSelectAll=Select All
buttonDeselectAll=Deselect All
buttonCompare=Compare
buttonFilter=Filter
buttonShowDetails=Show Details

# Tooltip Strings
tooltipCompare=Compare selected folders
tooltipChooseFolder1=Choose first folder which files will be compared
tooltipChooseFolder2=Choose second folder which files will be compared
tooltipAddFiles=Add multiple Java files
tooltipAddDirectory=Add all Java files from a directory
tooltipRemoveFiles=Remove selected files from the list
tooltipMinJson=Exported JSON files will be in minimalistic format instead of human readable pretty print
tooltipShowNonContractObjects=Show every file, class or method even those without any contract
tooltipReportOnlyContractChanges=Only changes affecting contracts will be reported
tooltipReportEqual=Even though both files, classes, methods or contracts are equal report will be created
tooltipShowContractsOfType=Show {0} contracts in application
tooltipExportToJson=Export selected files to JSON (Export is only affected by minJSON filter)
tooltipFilter=Applies filters selected in this toolbar

# Label Strings
labelTabExtractor=Contract Extractor
labelTabComparator=Contract Comparator
labelCompareTo=Compare to
labelListOfFiles=List of files
labelSelectedFiles=Files selected
labelEmptyList=Empty list\n\nAdd files using the plus buttons on the top toolbar
labelEmptyListFilters=Empty list\n\nChange filter settings to show hidden files
labelComparatorEmptyList=Empty list\n\nChoose both folders on the top toolbar\n Then use Compare button to create reports
labelFileDetails=File details
labelFile=File:
labelFileDefaultValue="File not selected" - choose it from the list
labelContracts=contracts
labelThisFile=This file:
labelOtherFile=Other file:
labelApiEqual=API equal:
labelContractEqual=Contract equal:
labelNumberOfFilesAdded=Files added:
labelNumberOfFilesRemoved=Files removed:
labelNumberOfContractsAdded=Contracts added:
labelNumberOfContractsRemoved=Contracts removed:
labelNumberOfContractsChanged=Contracts changed:
labelNumberOfClassesAdded=Classes added:
labelNumberOfClassesRemoved=Classes removed:
labelNumberOfMethodsAdded=Methods added:
labelNumberOfMethodsRemoved=Methods removed:
labelGlobalStatistics=Global Statistics
labelNumberOfFiles=Files:
labelNumberOfClasses=Classes:
labelNumberOfMethods=Methods:
labelNumberOfMethodsWithContracts=Methods with contract:
labelNumberOfContracts=Contracts:
comparatorFolderNotSelect="Folder not selected"

# Loading messages
loadingExtract=Extracting contracts...
loadingCompare=Comparing folders...

# CheckBox Strings
toggleMinJson=MinJSON
toggleShowNonContractObjects=Show Non Contract Objects
toggleReportOnlyContractChanges=Report Only Contract Changes
toggleReportEqual=Report Equal

# Details view tab titles
treeRepresentation=Tree View
jsonRepresentation=Raw Unfiltered JSON

# Extractor Tree view Strings
javaFile=Java File
classes=Classes
methods=Methods
invariants=Class Invariants
contracts=Contracts
completeExpression=Complete expression:
contractFunction=Function:
contractExpression=Expression:
contractArguments=Arguments
treeEmpty=Empty

# Comparator Tree view Strings
javaFileCompareReport=Java File Compare Report
apiChanges=Api Changes
signature=Signature:
contractsAffected=Contracts affected:
contractCompareReports=Contract Compare Reports
treeContract=Contract
treeClass=Class:
treeMethod=Method:
treeThisContract=This Contract:
treeOtherContract=Other Contract:

# Error messages for GUI application
errorCannotLoadMainWindow=Application could not load the main window
errorElementNotRetrieved=Element {0} could not be retrieved
guiErrorShowDetailsWindow=Could not show details window

# Error messages for console application
consoleAppError=\nERROR:
consoleAppErrorFileNotFolder=Path "{0}" is a file not a folder.
consoleAppErrorFolderNotCreated=Folder "{0}" couldn't be created
consoleAppErrorFolderNotExist=Folder "{0}" does not exist
consoleAppErrorOneParamHelp=Help command cannot have any additional parameters
consoleAppErrorFirstParamIsNull=First parameter could not be retrieved
consoleAppErrorFirstParamUnknown=First parameter is an unknown command ({0})
consoleAppErrorExtractorWrongNumParamsMin=Extractor command has to have at least 2 parameters (input folder and output folder)
consoleAppErrorExtractorWrongNumParamsMax=Extractor command can have only 2 optional parameters
consoleAppErrorExtractorFlagUnknown=Unknown flag for extractor command ({0})
consoleAppErrorComparatorWrongNumParamsMin=Comparator command has to have at least 3 parameters (first and second input folder, output folder)
consoleAppErrorComparatorWrongNumParamsMax=Comparator command can have only 3 optional parameters
consoleAppErrorComparatorFlagUnknown=Unknown flag for comparator command ({0})

# Console application help
consoleAppHelp= --- Contract Manager (Console Application): Help ---\
                \n\nTo run application with graphic interface please run it without any parameters. Otherwise look \
                bellow at possibilities how to pass commands to console application. First parameter always has to be \
                either -h OR --help OR -e OR -c.\
                \n\nExtractor: Extract contracts from folder\
                \n\t-e <input_folder> <output_folder> [-r] [-m]\
                \n\t-e (Extractor): Flag marking usage of extractor\
                \n\tinput_folder: Path to folder containing Java files to be extracted\
                \n\toutput_folder: Path to folder where should be saved JSON results\
                \n\t-r (Remove Non Contract Objects): Remove objects without contract\
                \n\t-m (MinJSON): Use MinJSON instead of pretty print for JSON files\
                \n\nComparator: Compares two folders with Java files\
                \n\t -c <input_folder1> <input_folder2> <output_folder> [-q] [-o] [-m]\
                \n\t-c (Comparator): Flag marking usage of comparator\
                \n\tinput_folder1: First folder with Java files to be compared\
                \n\tinput_folder2: Second folder with Java files to be compared\
                \n\toutput_folder: Path to folder where should be saved JSON results\
                \n\t-q (Remove Equal): Remove reports about equal objects\
                \n\t-o (Report Only Contract Changes): Report only changes affecting contracts\
                \n\t-m (MinJSON): Use MinJSON instead of pretty print for JSON files\
                \n\nUse single parameter -h or --help to show this help.\n