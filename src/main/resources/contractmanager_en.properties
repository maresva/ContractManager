windowTitle=Contract Manager
windowTitleDetails=Details

consoleAddNoFiles=No file was added
consoleAddOneFile=1 file was added
consoleAddManyFiles= files were added
consoleDeleteNoFiles=No file was removed
consoleDeleteOneFile=1 file was removed
consoleDeleteManyFiles= files were removed
consoleExportNoFiles=No file was exported
consoleExportOneFile=1 file was exported
consoleExportManyFiles= files were exported

fileChooserFilter=Java source files

buttonFile=File
buttonSelectAll=Select All
buttonDeselectAll=Deselect All
buttonAddFiles=Add Files
tooltipAddFiles=Add multiple Java files
buttonAddDirectory=Add Directory
tooltipAddDirectory=Add all Java files from a directory
buttonRemoveFiles=Remove Files
tooltipRemoveFiles=Remove selected files from the list
buttonCloseApp=Close Application

buttonExport=Export
buttonExportToJson=Export to JSON
tooltipExportToJson=Export selected files to JSON

buttonHelp=Help
buttonAbout=About

buttonShowDetails=Show Details

labelTabExtractor=Contract Extractor
labelTabComparator=Contract Comparator

labelListOfFiles=List of files
labelSelectedFiles=Files selected
labelEmptyList=Empty - Add files using the plus button
labelFileDetails=File details
labelFilename=Filename:
labelFile=File:
labelPath=Path:
labelContracts=contracts

labelFileStatistics=Statistics
labelGlobalStatistics=Global Statistics
labelNumberOfFiles=Files:
labelNumberOfClasses=Classes:
labelNumberOfMethods=Methods:
labelNumberOfMethodsWithContracts=Methods with contract:
labelNumberOfContracts=Contracts:


# Strings connected with console application
consoleAppError=\nERROR:
consoleAppErrorFileNotFolder=Path "{0}" is a file not a folder.
consoleAppErrorFolderNotCreated=Folder "{0}" couldn't be created
consoleAppErrorFolderNotExist=Folder "{0}" does not exist
consoleAppErrorOneParamHelp=Help command cannot have any additional parameters
consoleAppErrorFirstParamIsNull=First parameter could not be retrieved
consoleAppErrorFirstParamUnknown=First parameter is an unknown command ({0})
consoleAppErrorExtractorWrongNumParamsMin=Extractor command has to have at least 2 parameters (input folder and output folder)
consoleAppErrorExtractorWrongNumParamsMax=Extractor command can have only 2 optional parameters
consoleAppErrorExtractorFlagUnknown=Unknown flag for extractor command ({0})
consoleAppErrorComparatorWrongNumParamsMin=Comparator command has to have at least 3 parameters (first and second input folder, output folder)
consoleAppErrorComparatorWrongNumParamsMax=Comparator command can have only 3 optional parameters
consoleAppErrorComparatorFlagUnknown=Unknown flag for comparator command ({0})

consoleAppHelp= --- Contract Manager (Console Application): Help ---\
                \n\nTo run application with graphic interface please run it without any parameters. Otherwise look \
                bellow at possibilities how to pass commands to console application. First parameter always has to be \
                either -h OR --help OR -e OR -c.\
                \n\nExtractor: Extract contracts from folder\
                \n\t-e <input_folder> <output_folder> [-r] [-m]\
                \n\t-e (Extractor): Flag marking usage of extractor\
                \n\tinput_folder: Path to folder containing Java files to be extracted\
                \n\toutput_folder: Path to folder where should be saved JSON results\
                \n\t-r (Remove Non Contract Objects): Remove objects without contract\
                \n\t-m (MinJSON): Use MinJSON instead of pretty print for JSON files\
                \n\nComparator: Compares two folders with Java files\
                \n\t -c <input_folder1> <input_folder2> <output_folder> [-q] [-o] [-m]\
                \n\t-c (Comparator): Flag marking usage of comparator\
                \n\tinput_folder1: First folder with Java files to be compared\
                \n\tinput_folder2: Second folder with Java files to be compared\
                \n\toutput_folder: Path to folder where should be saved JSON results\
                \n\t-q (Remove Equal): Remove reports about equal objects\
                \n\t-o (Report Only Contract Changes): Report only changes affecting contracts\
                \n\t-m (MinJSON): Use MinJSON instead of pretty print for JSON files\
                \n\nUse single parameter -h or --help to show this help.\n
  
